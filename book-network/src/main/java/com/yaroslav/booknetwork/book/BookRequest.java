package com.yaroslav.booknetwork.book;

// Импорт необходимых аннотаций для проверки данных
import jakarta.validation.constraints.NotEmpty; // Аннотация, указывающая, что значение не должно быть пустым
import jakarta.validation.constraints.NotNull; // Аннотация, указывающая, что значение не должно быть null

/**
 * Record BookRequest представляет запрос на создание или обновление книги.
 * Использует аннотации для валидации данных, чтобы убедиться, что необходимые поля не пусты и не null.
 * Записи в Java автоматически генерируют конструкторы, методы "геттеры", "equals", "hashCode", и "toString".
 */
public record BookRequest(
        // Поле для уникального идентификатора книги (если известно)
        Integer id, // Уникальный идентификатор книги (может быть null для новых запросов)

        // Поле для хранения названия книги. Не должно быть пустым или null.
        @NotNull(message = "100") // Указывает, что значение не должно быть null, с пользовательским сообщением
        @NotEmpty(message = "100") // Указывает, что значение не должно быть пустым, с пользовательским сообщением
        String title, // Название книги

        // Поле для имени автора книги. Не должно быть пустым или null.
        @NotNull(message = "101") // Указывает, что значение не должно быть null, с пользовательским сообщением
        @NotEmpty(message = "101") // Указывает, что значение не должно быть пустым, с пользовательским сообщением
        String authorName, // Имя автора книги

        // Поле для хранения ISBN (международного стандартного книжного номера). Не должно быть пустым или null.
        @NotNull(message = "102") // Указывает, что значение не должно быть null, с пользовательским сообщением
        @NotEmpty(message = "102") // Указывает, что значение не должно быть пустым, с пользовательским сообщением
        String isbn, // ISBN (международный стандартный книжный номер)

        // Поле для хранения краткого описания или аннотации книги. Не должно быть пустым или null.
        @NotNull(message = "103") // Указывает, что значение не должно быть null, с пользовательским сообщением
        @NotEmpty(message = "103") // Указывает, что значение не должно быть пустым, с пользовательским сообщением
        String synopsis, // Краткое описание или аннотация книги

        // Поле, указывающее, можно ли делить или передавать книгу
        boolean shareable // Флаг, указывающий, можно ли книгу делить или передавать
) {
        // Это весь класс записи. Записи в Java автоматически генерируют конструктор, методы "геттеры",
        // "equals", "hashCode", и "toString", что делает их легким и лаконичным способом определения неизменяемых объектов.
}
